{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (password, email) => {\n  return fetch(BASE_URL + \"/signup\", {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(res => {\n    console.log(res);\n\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  });\n};\nexport const login = (password, email) => {\n  return fetch(BASE_URL + \"/signin\", {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      console.log(data);\n    } else {\n      return;\n    }\n  });\n};\nexport const tokenCheck = token => {\n  return fetch(BASE_URL + \"/users/me\", {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }).then(res => {\n    console.log(res);\n  });\n};","map":{"version":3,"sources":["/Users/dmitrijcernysev/Desktop/projects/react-mesto-auth/mesto-react/src/components/AuthApi.js"],"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","console","log","ok","json","Promise","reject","status","login","data","jwt","localStorage","setItem","tokenCheck","token"],"mappings":"AACA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAEzC,SAAOC,KAAK,CAACJ,QAAQ,GAAG,SAAZ,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,kBAAYP,QADO;AAEnB,eAASC;AAFU,KAAf;AAL2B,GAAvB,CAAL,CAUNO,IAVM,CAUAC,GAAD,IAAS;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAIA,GAAG,CAACG,EAAR,EAAY;AACV,aAAOH,GAAG,CAACI,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,aAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUN,GAAG,CAACO,MAAO,EAArC,CAAP;AACD;AACF,GAjBM,CAAP;AAkBH,CApBM;AAsBP,OAAO,MAAMC,KAAK,GAAG,CAACjB,QAAD,EAAWC,KAAX,KAAqB;AACxC,SAAOC,KAAK,CAACJ,QAAQ,GAAG,SAAZ,EAAsB;AAChCK,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFuB;AAKhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,kBAAYP,QADO;AAEnB,eAASC;AAFU,KAAf;AAL0B,GAAtB,CAAL,CAUNO,IAVM,CAUAC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACG,EAAR,EAAY;AACV,aAAOH,GAAG,CAACI,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,aAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUN,GAAG,CAACO,MAAO,EAArC,CAAP;AACD;AACF,GAhBM,EAiBNR,IAjBM,CAiBAU,IAAD,IAAU;AAEf,QAAIA,IAAI,CAACC,GAAT,EAAa;AACVC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACC,GAAjC;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACD,KAHF,MAGQ;AACL;AACD;AACD,GAzBK,CAAP;AA0BD,CA3BM;AA6BP,OAAO,MAAMI,UAAU,GAAIC,KAAD,IAAW;AACnC,SAAOrB,KAAK,CAACJ,QAAQ,GAAG,WAAZ,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAmB,UAASmB,KAAM;AAF3B;AAF0B,GAAzB,CAAL,CAONf,IAPM,CAOAC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACG,EAAR,EAAY;AACV,aAAOH,GAAG,CAACI,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,aAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUN,GAAG,CAACO,MAAO,EAArC,CAAP;AACD;AACF,GAbM,EAcNR,IAdM,CAcAC,GAAD,IAAS;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAhBM,CAAP;AAiBD,CAlBM","sourcesContent":["\nexport const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (password, email) => {\n\n    return fetch(BASE_URL + \"/signup\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"password\": password,\n        \"email\": email\n      })\n    })\n    .then((res) => {\n      console.log(res)\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n}\n\nexport const login = (password, email) => {\n  return fetch(BASE_URL + \"/signin\",{\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  })\n  .then((res) => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  })\n  .then((data) => {\n  \n   if (data.jwt){\n      localStorage.setItem('jwt', data.jwt);\n      console.log(data)\n    } else {\n      return;\n    }\n   })\n}\n\nexport const tokenCheck = (token) => {\n  return fetch(BASE_URL + \"/users/me\", {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\" : `Bearer ${token}`\n    }\n  })\n  .then((res) => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  })\n  .then((res) => {\n    console.log(res)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}