{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const register = (password, email) => {\n  return fetch(BASE_URL + \"/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  });\n};\nexport const login = (password, email) => {\n  return fetch(BASE_URL + \"/signin\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }).then(data => {\n    if (data.token) {\n      localStorage.setItem(\"token\", data.token);\n    } else {\n      return;\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const tokenCheck = token => {\n  return fetch(BASE_URL + \"/users/me\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/dmitrijcernysev/Desktop/projects/react-mesto-auth/mesto-react/src/components/AuthApi.js"],"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","login","data","token","localStorage","setItem","catch","err","console","log","tokenCheck","Authorization"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,SAAOC,KAAK,CAACJ,QAAQ,GAAG,SAAZ,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,QAAQ,EAAEA,QADS;AAEnBC,MAAAA,KAAK,EAAEA;AAFY,KAAf;AAL2B,GAAvB,CAAL,CASJO,IATI,CASEC,GAAD,IAAS;AACf,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,aAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACF,GAfM,CAAP;AAgBD,CAjBM;AAmBP,OAAO,MAAMC,KAAK,GAAG,CAACf,QAAD,EAAWC,KAAX,KAAqB;AACxC,SAAOC,KAAK,CAACJ,QAAQ,GAAG,SAAZ,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,QAAQ,EAAEA,QADS;AAEnBC,MAAAA,KAAK,EAAEA;AAFY,KAAf;AAL2B,GAAvB,CAAL,CAUJO,IAVI,CAUEC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,aAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACF,GAhBI,EAiBJN,IAjBI,CAiBEQ,IAAD,IAAU;AACd,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACdC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACC,KAAnC;AACD,KAFD,MAEO;AACL;AACD;AACF,GAvBI,EAwBJG,KAxBI,CAwBGC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GA1BI,CAAP;AA2BD,CA5BM;AA8BP,OAAO,MAAMG,UAAU,GAAIP,KAAD,IAAW;AACnC,SAAOf,KAAK,CAACJ,QAAQ,GAAG,WAAZ,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPqB,MAAAA,aAAa,EAAG,UAASR,KAAM;AAFxB;AAF0B,GAAzB,CAAL,CAOJT,IAPI,CAOEC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,aAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACF,GAbI,EAcJN,IAdI,CAcEC,GAAD,IAAS;AACb,WAAOA,GAAP;AACD,GAhBI,EAiBJW,KAjBI,CAiBGC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAnBI,CAAP;AAoBD,CArBM","sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = (password, email) => {\n  return fetch(BASE_URL + \"/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  });\n};\n\nexport const login = (password, email) => {\n  return fetch(BASE_URL + \"/signin\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n      } else {\n        return;\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const tokenCheck = (token) => {\n  return fetch(BASE_URL + \"/users/me\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}