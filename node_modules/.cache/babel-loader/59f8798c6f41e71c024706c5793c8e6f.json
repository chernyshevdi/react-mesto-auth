{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijcernysev/Desktop/projects/MestoReact/mesto-react/mesto-react/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  const avatarRef = React.useRef();\n  const [avatar, setAvatar] = useState('');\n  const avatarContext = React.useContext(CurrentUserContext);\n  useEffect(() => {\n    setAvatar(avatarContext.avatar);\n  }, [userContext]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarRef\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: 'avatar',\n    title: 'Вы уверены?',\n    isOpen: props.isOpen ? 'popup_opened' : '',\n    onClose: props.onClose,\n    buttonText: 'Да',\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      className: \"popup__input\",\n      id: \"popup__avatar\",\n      name: \"avatarUrl\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n      required: true,\n      ref: avatarRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__input-error popup__avatar-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"KvC84KB49L8n0Yq2sA/CDedfm0w=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/dmitrijcernysev/Desktop/projects/MestoReact/mesto-react/mesto-react/src/components/EditAvatarPopup.js"],"names":["React","useState","useEffect","PopupWithForm","CurrentUserContext","EditAvatarPopup","props","avatarRef","useRef","avatar","setAvatar","avatarContext","useContext","userContext","handleSubmit","e","preventDefault","onUpdateAvatar","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAAUC,eAAV,CAA0BC,KAA1B,EAAiC;AAAA;;AAE/B,QAAMC,SAAS,GAAGP,KAAK,CAACQ,MAAN,EAAlB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMU,aAAa,GAAGX,KAAK,CAACY,UAAN,CAAiBR,kBAAjB,CAAtB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS,CAACC,aAAa,CAACF,MAAf,CAAT;AACD,GAFQ,EAEN,CAACI,WAAD,CAFM,CAAT;;AAIA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEAV,IAAAA,KAAK,CAACW,cAAN,CAAqB;AACnBR,MAAAA,MAAM,EAACF;AADY,KAArB;AAGD;;AAED,sBACE,QAAC,aAAD;AAAe,IAAA,IAAI,EAAI,QAAvB;AAAiC,IAAA,KAAK,EAAE,aAAxC;AAAuD,IAAA,MAAM,EAAED,KAAK,CAACY,MAAN,GAAe,cAAf,GAAgC,EAA/F;AACE,IAAA,OAAO,EAAEZ,KAAK,CAACa,OADjB;AAC0B,IAAA,UAAU,EAAE,IADtC;AAC4C,IAAA,QAAQ,EAAEL,YADtD;AAAA,4BAEI;AAAO,MAAA,IAAI,EAAC,KAAZ;AAAkB,MAAA,SAAS,EAAC,cAA5B;AAA2C,MAAA,EAAE,EAAC,eAA9C;AAA8D,MAAA,IAAI,EAAC,WAAnE;AAA+E,MAAA,WAAW,EAAC,wFAA3F;AACC,MAAA,QAAQ,MADT;AACU,MAAA,GAAG,EAAEP;AADf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA1BSF,e;;KAAAA,e;AA4BV,eAAeA,eAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction  EditAvatarPopup(props) {\n\n  const avatarRef = React.useRef();\n  const [avatar, setAvatar] = useState('');\n  const avatarContext = React.useContext(CurrentUserContext);\n\n  useEffect(() => {\n    setAvatar(avatarContext.avatar);\n  }, [userContext]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar:avatarRef\n    });\n  }\n\n  return (\n    <PopupWithForm name = {'avatar'} title={'Вы уверены?'} isOpen={props.isOpen ? 'popup_opened' : ''}\n      onClose={props.onClose} buttonText={'Да'} onSubmit={handleSubmit} >\n        <input type=\"url\" className=\"popup__input\" id=\"popup__avatar\" name='avatarUrl' placeholder=\"Ссылка на аватар\"\n         required ref={avatarRef} />\n        <span className=\"popup__input-error popup__avatar-error\"></span>\n      </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n"]},"metadata":{},"sourceType":"module"}