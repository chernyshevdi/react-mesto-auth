{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijcernysev/Desktop/projects/react-mesto-auth/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { api } from \"../utils/Api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { CardsContext } from \"../contexts/CardsContext\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as auth from './AuthApi';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    name: \"\",\n    link: \"\"\n  });\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  function checkToken() {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.tokenCheck(jwt).then(res => {});\n    }\n  }\n\n  useEffect(() => {\n    api.getUserData().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    api.getCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    !isLiked ? api.addLike(card._id).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    }) : api.deleteLike(card._id).then(res => {\n      setCards(state => state.map(c => c._id === card._id ? res : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard();\n  }\n\n  function handleUpdateUser(data) {\n    api.patchUserData(data.name, data.about).then(res => {\n      setCurrentUser(res);\n      setIsEditProfilePopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(data) {\n    api.patchAvatar(data.avatar).then(res => {\n      setCurrentUser(res);\n      setIsEditAvatarPopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateCard(data) {\n    api.patchCard(data.name, data.link).then(res => {\n      setCards([res, ...cards]);\n      setIsAddPlacePopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  function handleUpdateLogin(e) {\n    setLoggedIn(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardsContext.Provider, {\n        value: cards,\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              path: \"/\",\n              loggedIn: loggedIn,\n              component: Main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/page\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Main, {\n                onEditProfile: handleEditProfileClick,\n                onAddPlace: handleAddPlaceClick,\n                onEditAvatar: handleEditAvatarClick,\n                onCardClick: handleCardClick,\n                cards: cards,\n                onCardLike: handleCardLike,\n                onCardDelete: handleCardDelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n                isOpen: isEditProfilePopupOpen,\n                onClose: closeAllPopups,\n                onUpdateUser: handleUpdateUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n                isOpen: isAddPlacePopupOpen,\n                onClose: closeAllPopups,\n                onAddPlace: handleUpdateCard\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n                isOpen: isEditAvatarPopupOpen,\n                onClose: closeAllPopups,\n                onUpdateAvatar: handleUpdateAvatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n                onClose: closeAllPopups,\n                card: selectedCard\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              handleUpdateLogin: handleUpdateLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 24\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4LfI+Nsw6yCIkSSDDXIAy1MVRM8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dmitrijcernysev/Desktop/projects/react-mesto-auth/mesto-react/src/components/App.js"],"names":["Header","Main","Footer","PopupWithForm","ImagePopup","React","useState","useEffect","api","CurrentUserContext","CardsContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Route","Routes","Navigate","Login","Register","InfoTooltip","ProtectedRoute","auth","useNavigate","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","name","link","currentUser","setCurrentUser","cards","setCards","checkToken","jwt","localStorage","getItem","tokenCheck","then","res","getUserData","catch","err","console","log","getCards","handleCardLike","card","isLiked","likes","some","i","_id","addLike","newCard","state","map","c","deleteLike","handleCardDelete","deleteCard","filter","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","closeAllPopups","handleUpdateUser","data","patchUserData","about","handleUpdateAvatar","patchAvatar","avatar","handleUpdateCard","patchCard","loggedIn","setLoggedIn","handleUpdateLogin","e"],"mappings":"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","sourcesContent":["import Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { api } from \"../utils/Api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { CardsContext } from \"../contexts/CardsContext\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as auth from './AuthApi';\nimport { useNavigate } from 'react-router-dom';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({ name: \"\", link: \"\" });\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  function checkToken() {\n    const jwt = localStorage.getItem('jwt')\n    if(jwt) {\n      auth.tokenCheck(jwt)\n      .then((res) => {\n        \n      })\n    }\n  }\n\n\n  useEffect(() => {\n    api\n      .getUserData()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    api\n      .getCards()\n      .then((res) => {\n        setCards(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    !isLiked\n      ? api\n          .addLike(card._id)\n          .then((newCard) => {\n            setCards((state) =>\n              state.map((c) => (c._id === card._id ? newCard : c))\n            );\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n      : api\n          .deleteLike(card._id)\n          .then((res) => {\n            setCards((state) =>\n              state.map((c) => (c._id === card._id ? res : c))\n            );\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard();\n  }\n\n  function handleUpdateUser(data) {\n    api\n      .patchUserData(data.name, data.about)\n      .then((res) => {\n        setCurrentUser(res);\n        setIsEditProfilePopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .patchAvatar(data.avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        setIsEditAvatarPopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateCard(data) {\n    api\n      .patchCard(data.name, data.link)\n      .then((res) => {\n        setCards([res, ...cards]);\n        setIsAddPlacePopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  function handleUpdateLogin(e) {\n    setLoggedIn(true)\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <CardsContext.Provider value={cards}>\n        <Routes>\n\n          <Route\n\n           element={<ProtectedRoute path=\"/\" loggedIn={loggedIn} component={Main} />  }\n          />\n\n          <Route path=\"/page\" element ={\n            <>\n\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n         />\n\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n        />\n\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleUpdateCard}\n              />\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n         />\n\n          <ImagePopup onClose={closeAllPopups} card={selectedCard} />\n\n          <Footer />\n\n          <InfoTooltip />\n            </>\n        } />\n\n          <Route exact path=\"/sign-in\" element ={<Login handleUpdateLogin={handleUpdateLogin} />} />\n          <Route exact path=\"/sign-up\" element ={<Register />} />\n          <Route exact path=\"/\" element ={\n            loggedIn ? <Navigate to=\"/page\"/> : <Navigate to=\"/sign-in\"/>\n          } />\n\n          </Routes>\n          </CardsContext.Provider>\n      </CurrentUserContext.Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}