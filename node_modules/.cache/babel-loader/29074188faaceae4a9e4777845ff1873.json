{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijcernysev/Desktop/projects/MestoReact/mesto-react/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const userContext = React.useContext(CurrentUserContext);\n  console.log(userContext);\n  useEffect(() => {\n    setName(userContext.name);\n    setDescription(userContext.about);\n  }, [userContext]);\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: 'type_profile',\n    title: 'Редактировать профиль',\n    isOpen: props.isOpen ? 'popup_opened' : '',\n    onClose: props.onClose,\n    buttonText: 'Сохранить',\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"popup__input\",\n      id: \"popup__name\",\n      name: \"profile_name\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      required: true,\n      onChange: handleChangeName,\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__name-error popup__input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"popup__input\",\n      id: \"popup__description\",\n      name: \"profile_description\",\n      placeholder: \"\\u0412\\u0438\\u0434 \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\",\n      required: true,\n      onChange: handleChangeDescription,\n      value: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__description-error popup__input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"5DPZ1q3Sp0a31GkTjBbe92ruIn8=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/dmitrijcernysev/Desktop/projects/MestoReact/mesto-react/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useState","useEffect","PopupWithForm","CurrentUserContext","EditProfilePopup","props","name","setName","description","setDescription","userContext","useContext","console","log","about","handleChangeName","e","target","value","handleChangeDescription","handleSubmit","preventDefault","onUpdateUser","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAE/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMU,WAAW,GAAGX,KAAK,CAACY,UAAN,CAAiBR,kBAAjB,CAApB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACG,WAAW,CAACJ,IAAb,CAAP;AACAG,IAAAA,cAAc,CAACC,WAAW,CAACI,KAAb,CAAd;AACD,GAHQ,EAGN,CAACJ,WAAD,CAHM,CAAT;;AAKA,WAASK,gBAAT,CAA0BC,CAA1B,EAA6B;AAC3BT,IAAAA,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD;;AAED,WAASC,uBAAT,CAAiCH,CAAjC,EAAoC;AAClCP,IAAAA,cAAc,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD;;AAED,WAASE,YAAT,CAAsBJ,CAAtB,EAAyB;AACvB;AACAA,IAAAA,CAAC,CAACK,cAAF,GAFuB,CAIvB;;AACAhB,IAAAA,KAAK,CAACiB,YAAN,CAAmB;AACjBhB,MAAAA,IAAI,EAAEA,IADW;AAEjBQ,MAAAA,KAAK,EAAEN;AAFU,KAAnB;AAID;;AAED,sBACE,QAAC,aAAD;AAAe,IAAA,IAAI,EAAI,cAAvB;AAAuC,IAAA,KAAK,EAAE,uBAA9C;AAAuE,IAAA,MAAM,EAAEH,KAAK,CAACkB,MAAN,GAAe,cAAf,GAAgC,EAA/G;AACA,IAAA,OAAO,EAAElB,KAAK,CAACmB,OADf;AACwB,IAAA,UAAU,EAAE,WADpC;AACiD,IAAA,QAAQ,EAAEJ,YAD3D;AAAA,4BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,EAAE,EAAC,aAA/C;AAA6D,MAAA,IAAI,EAAC,cAAlE;AAAiF,MAAA,WAAW,EAAC,oBAA7F;AAAmG,MAAA,QAAQ,MAA3G;AACC,MAAA,QAAQ,EAAEL,gBADX;AAC6B,MAAA,KAAK,EAAET;AADpC;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,EAAE,EAAC,oBAA/C;AAAoE,MAAA,IAAI,EAAC,qBAAzE;AAA+F,MAAA,WAAW,EAAC,6FAA3G;AACA,MAAA,QAAQ,MADR;AACS,MAAA,QAAQ,EAAEa,uBADnB;AAC4C,MAAA,KAAK,EAAEX;AADnD;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA1CQJ,gB;;KAAAA,gB;AA4CT,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm.js'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const userContext = React.useContext(CurrentUserContext);\n  console.log(userContext)\n\n  useEffect(() => {\n    setName(userContext.name);\n    setDescription(userContext.about);\n  }, [userContext]);\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  return(\n    <PopupWithForm name = {'type_profile'} title={'Редактировать профиль'} isOpen={props.isOpen ? 'popup_opened' : ''}\n    onClose={props.onClose} buttonText={'Сохранить'} onSubmit={handleSubmit}>\n      <input type=\"text\" className=\"popup__input\" id=\"popup__name\" name=\"profile_name\" placeholder=\"Имя\" required\n       onChange={handleChangeName} value={name} />\n      <span className=\"popup__name-error popup__input-error\"></span>\n      <input type=\"text\" className=\"popup__input\" id=\"popup__description\" name=\"profile_description\" placeholder=\"Вид деятельности\"\n      required onChange={handleChangeDescription} value={description} />\n      <span className=\"popup__description-error popup__input-error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n"]},"metadata":{},"sourceType":"module"}