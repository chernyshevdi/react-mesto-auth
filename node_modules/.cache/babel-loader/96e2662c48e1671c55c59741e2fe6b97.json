{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijcernysev/Desktop/projects/MestoReact/mesto-react/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport React, { useState, useEffect } from 'react';\nimport { api } from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { CardsContext } from '../contexts/CardsContext';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState();\n  const [currentUser, setCurrentUser] = useState('');\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    api.getUserData().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    api.getCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === userContext._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n    //api.addLike(card._id, !isLiked)\n    //.then((newCard) => {\n    //setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    //});\n  }\n\n  function handleCardDelete() {}\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(); //setCurrentUser(); ???\n  }\n\n  function handleUpdateUser(data) {\n    api.patchUserData(data.name, data.about).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(data) {\n    console.log(data);\n    api.patchAvatar(data.avatar).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardsContext.Provider, {\n        value: cards,\n        children: [/*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: 'type_card-add',\n          title: 'Новое место',\n          isOpen: isAddPlacePopupOpen ? 'popup_opened' : '',\n          onClose: closeAllPopups,\n          buttonText: 'Сохранить',\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"popup__input\",\n            id: \"popup__location\",\n            name: \"addFormName\",\n            placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"popup__input-error popup__location-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            className: \"popup__input\",\n            id: \"popup__link\",\n            name: \"addFormUrl\",\n            placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"popup__input-error popup__link-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          onClose: closeAllPopups,\n          card: selectedCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PQvF2augl/GuvhhltFRa1EgtwcM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dmitrijcernysev/Desktop/projects/MestoReact/mesto-react/mesto-react/src/components/App.js"],"names":["Header","Main","Footer","PopupWithForm","ImagePopup","React","useState","useEffect","api","CurrentUserContext","CardsContext","EditProfilePopup","EditAvatarPopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","getUserData","then","res","catch","err","console","log","getCards","handleCardLike","card","isLiked","likes","some","i","_id","userContext","handleCardDelete","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","closeAllPopups","handleUpdateUser","data","patchUserData","name","about","handleUpdateAvatar","patchAvatar","avatar"],"mappings":"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","sourcesContent":["import Header from './Header.js'\nimport Main from './Main.js'\nimport Footer from './Footer.js'\nimport PopupWithForm from './PopupWithForm.js'\nimport ImagePopup from './ImagePopup.js'\nimport React, {useState, useEffect } from 'react';\nimport { api } from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { CardsContext } from '../contexts/CardsContext';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\n\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState();\n  const [currentUser, setCurrentUser] = useState('');\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    api.getUserData()\n    .then((res) => {\n      setCurrentUser(res)\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }, [])\n\n  useEffect(() => {\n    api.getCards()\n    .then((res) => {\n        setCards(res)\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n}, [])\n\nfunction handleCardLike(card) {\n\n  // Снова проверяем, есть ли уже лайк на этой карточке\n  const isLiked = card.likes.some(i => i._id === userContext._id);\n\n  // Отправляем запрос в API и получаем обновлённые данные карточки\n  //api.addLike(card._id, !isLiked)\n  //.then((newCard) => {\n    //setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  //});\n}\n\nfunction handleCardDelete() {\n\n}\n\nfunction handleEditAvatarClick() {\n  setIsEditAvatarPopupOpen(true);\n}\n\nfunction handleEditProfileClick() {\n  setIsEditProfilePopupOpen(true);\n}\n\nfunction handleAddPlaceClick(){\n  setIsAddPlacePopupOpen(true);\n}\n\nfunction handleCardClick(card) {\n  setSelectedCard(card);\n}\n\nfunction closeAllPopups() {\n  setIsEditAvatarPopupOpen(false);\n  setIsEditProfilePopupOpen(false);\n  setIsAddPlacePopupOpen(false);\n  setSelectedCard();\n  //setCurrentUser(); ???\n}\n\nfunction handleUpdateUser(data) {\n  api.patchUserData(data.name, data.about)\n  .then((res) => {\n    setCurrentUser(res)\n  })\n  .catch((err) => {\n    console.log(err)\n  })\n}\n\nfunction handleUpdateAvatar(data) {\n  console.log(data)\n  api.patchAvatar(data.avatar)\n  .then((res) => {\n    setCurrentUser(res)\n  })\n  .catch((err) => {\n    console.log(err)\n  })\n}\n\n  return(\n\n\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n\n      <Header />\n\n      <CardsContext.Provider value={cards}>\n\n      <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick}\n      onCardClick ={handleCardClick} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n      <PopupWithForm name = {'type_card-add'} title={'Новое место'} isOpen={isAddPlacePopupOpen ? 'popup_opened' : ''}\n      onClose={closeAllPopups} buttonText={'Сохранить'}>\n        <input type=\"text\" className=\"popup__input\" id=\"popup__location\" name='addFormName' placeholder=\"Название\" required />\n        <span className=\"popup__input-error popup__location-error\"></span>\n        <input type=\"url\" className=\"popup__input\" id=\"popup__link\" name='addFormUrl' placeholder=\"Ссылка на картинку\" required />\n        <span className=\"popup__input-error popup__link-error\"></span>\n      </PopupWithForm>\n\n      <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n\n      <ImagePopup onClose={closeAllPopups}\n      card={selectedCard} />\n\n      </CardsContext.Provider>\n\n      <Footer />\n      </CurrentUserContext.Provider>\n    </div>\n\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}