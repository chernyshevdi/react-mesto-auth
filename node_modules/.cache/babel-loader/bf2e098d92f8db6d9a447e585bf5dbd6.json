{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijcernysev/Desktop/projects/MestoReact/mesto-react/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport { api } from '../utils/Api.js';\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { CardsContext } from '../contexts/CardsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const userContext = React.useContext(CurrentUserContext);\n  const cardsData = React.useContext(CardsContext);\n  const [cards, setCards] = useState([]);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === userContext._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.addLike(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n  /*\n  api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile__image\",\n            src: userContext.avatar,\n            alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\",\n            onClick: props.onEditAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            children: userContext.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__description\",\n            children: userContext.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__edit-button\",\n          type: \"button\",\n          \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\",\n          onClick: props.onEditProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__add-button\",\n        type: \"button\",\n        \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0439\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: cardsData.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        onCardClick: props.onCardClick,\n        card: item,\n        onCardLike: handleCardLike\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Main, \"a+jEJiIXir9/RpuyFESvpArff+0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/dmitrijcernysev/Desktop/projects/MestoReact/mesto-react/mesto-react/src/components/Main.js"],"names":["api","React","useEffect","useState","Card","CurrentUserContext","CardsContext","Main","props","userContext","useContext","cardsData","cards","setCards","handleCardLike","card","isLiked","likes","some","i","_id","addLike","then","newCard","state","map","c","avatar","onEditAvatar","name","about","onEditProfile","onAddPlace","item","onCardClick"],"mappings":"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","sourcesContent":["import {api} from '../utils/Api.js'\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card.js'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { CardsContext } from '../contexts/CardsContext';\n\nfunction Main(props) {\n\n    const userContext = React.useContext(CurrentUserContext);\n    const cardsData = React.useContext(CardsContext)\n    const [cards, setCards] = useState([]);\n\n\n  function handleCardLike(card) {\n\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === userContext._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.addLike(card._id, !isLiked)\n    .then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  /*\napi.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  */\n\n    return (\n    <>\n        <section className=\"profile\">\n            <div className=\"profile__avatar\">\n                <div className=\"profile__overlay\">\n                    <img className=\"profile__image\" src={userContext.avatar} alt =\"Аватар профиля\" onClick={props.onEditAvatar}/>\n                </div>\n            </div>\n            <div className=\"profile__info\">\n                <div className=\"profile__text\">\n                    <h1 className=\"profile__name\" >{userContext.name}</h1>\n                    <p className=\"profile__description\">{userContext.about}</p>\n                </div>\n                <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактирование профиля\" onClick={props.onEditProfile}></button>\n            </div>\n            <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавление фотографий\" onClick={props.onAddPlace}></button>\n        </section>\n        <section className=\"elements\">\n        {cardsData.map((item) => (\n            <Card onCardClick={props.onCardClick} key={item._id}  card={item} onCardLike={handleCardLike}/>\n        ))}\n        </section>\n    </>\n    )\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}