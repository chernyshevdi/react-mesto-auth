{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijcernysev/Desktop/projects/MestoReact/mesto-react/mesto-react/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const userContext = React.useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = props.card.owner._id === userContext._id; // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `element__delete ${isOwn ? \"element__delete_active\" : \"element__delete\"}`; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = props.card.likes.some(i => i._id === userContext._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `element__like ${isLiked ? \"element__like_active\" : \"element__like\"}`;\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"element\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"element__img\",\n      src: props.card.link,\n      alt: props.card.name,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: cardDeleteButtonClassName,\n        type: \"button\",\n        \"aria-label\": \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n        onClick: handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"element__name\",\n        children: props.card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element__like-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: cardLikeButtonClassName,\n          type: \"button\",\n          \"aria-label\": \"\\u041B\\u0430\\u0439\\u043A\",\n          onClick: handleLikeClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"element__like-counter\",\n          children: props.card.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"j5sV9rHnklY0KPGfLa+JuIW0EIQ=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/dmitrijcernysev/Desktop/projects/MestoReact/mesto-react/mesto-react/src/components/Card.js"],"names":["React","useEffect","useState","CurrentUserContext","Card","props","userContext","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","onCardClick","handleLikeClick","onCardLike","handleDeleteClick","onCardDelete","link","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,WAAW,GAAGN,KAAK,CAACO,UAAN,CAAiBJ,kBAAjB,CAApB,CADmB,CAEnB;;AACA,QAAMK,KAAK,GAAGH,KAAK,CAACI,IAAN,CAAWC,KAAX,CAAiBC,GAAjB,KAAyBL,WAAW,CAACK,GAAnD,CAHmB,CAKnB;;AACA,QAAMC,yBAAyB,GAAI,mBACjCJ,KAAK,GAAG,wBAAH,GAA8B,iBACpC,EAFD,CANmB,CAUnB;;AACA,QAAMK,OAAO,GAAGR,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAiBC,IAAjB,CAAuBC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUL,WAAW,CAACK,GAAnD,CAAhB,CAXmB,CAanB;;AACA,QAAMM,uBAAuB,GAAI,iBAC/BJ,OAAO,GAAG,sBAAH,GAA4B,eACpC,EAFD;;AAIA,WAASK,WAAT,GAAuB;AACrBb,IAAAA,KAAK,CAACc,WAAN,CAAkBd,KAAK,CAACI,IAAxB;AACD;;AAED,WAASW,eAAT,GAA2B;AACzBf,IAAAA,KAAK,CAACgB,UAAN,CAAiBhB,KAAK,CAACI,IAAvB;AACD;;AAED,WAASa,iBAAT,GAA6B;AAC3BjB,IAAAA,KAAK,CAACkB,YAAN,CAAmBlB,KAAK,CAACI,IAAzB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,GAAG,EAAEJ,KAAK,CAACI,IAAN,CAAWe,IAFlB;AAGE,MAAA,GAAG,EAAEnB,KAAK,CAACI,IAAN,CAAWgB,IAHlB;AAIE,MAAA,OAAO,EAAEP;AAJX;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAEN,yBADb;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,sBAAW,4CAHb;AAIE,QAAA,OAAO,EAAEU;AAJX;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBAA+BjB,KAAK,CAACI,IAAN,CAAWgB;AAA1C;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAER,uBADb;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,wBAAW,0BAHb;AAIE,UAAA,OAAO,EAAEG;AAJX;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsCf,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAiBY;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA1DQtB,I;;KAAAA,I;AA4DT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Card(props) {\n  const userContext = React.useContext(CurrentUserContext);\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = props.card.owner._id === userContext._id;\n\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = `element__delete ${\n    isOwn ? \"element__delete_active\" : \"element__delete\"\n  }`;\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = props.card.likes.some((i) => i._id === userContext._id);\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `element__like ${\n    isLiked ? \"element__like_active\" : \"element__like\"\n  }`;\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <div className=\"element\">\n      <img\n        className=\"element__img\"\n        src={props.card.link}\n        alt={props.card.name}\n        onClick={handleClick}\n      />\n      <div className=\"element__info\">\n        <button\n          className={cardDeleteButtonClassName}\n          type=\"button\"\n          aria-label=\"Удалить\"\n          onClick={handleDeleteClick}\n        ></button>\n        <h2 className=\"element__name\">{props.card.name}</h2>\n        <div className=\"element__like-group\">\n          <button\n            className={cardLikeButtonClassName}\n            type=\"button\"\n            aria-label=\"Лайк\"\n            onClick={handleLikeClick}\n          ></button>\n          <p className=\"element__like-counter\">{props.card.likes.length}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}